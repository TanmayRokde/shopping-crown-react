{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword /*for email and pass*/ } from 'firebase/auth';\nimport { getDoc, getFirestore, setDoc, doc } from 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAlzVDr28MYayjJSeDG_QBIoTJOJ8Mp0yo\",\n  authDomain: \"pro11-78bf1.firebaseapp.com\",\n  projectId: \"pro11-78bf1\",\n  storageBucket: \"pro11-78bf1.appspot.com\",\n  messagingSenderId: \"74071697846\",\n  appId: \"1:74071697846:web:52ea415136ee308b783917\",\n  measurementId: \"G-H5QQBD8XRC\"\n};\nconst firebaseApp = initializeApp(firebaseConfig);\nconst googleprovider = new GoogleAuthProvider();\ngoogleprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const createUserProfileDocument = async (userAuth, additionalData = {}) => {\n  if (!userAuth) return;\n  console.log(userAuth);\n};\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleprovider);\n;\nexport const db = getFirestore();\nexport const createUserDocumentFromAuth = async (userAuth, additionalInformation) => {\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation\n      });\n    } catch (error) {\n      console.log('error creating the user', error.message);\n    }\n  }\n  return userDocRef;\n};\n\n// email and password\n\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return await createUserWithEmailAndPassword(auth, email, password);\n};","map":{"version":3,"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","getDoc","getFirestore","setDoc","doc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseApp","googleprovider","setCustomParameters","prompt","createUserProfileDocument","userAuth","additionalData","console","log","auth","signInWithGooglePopup","db","createUserDocumentFromAuth","additionalInformation","userDocRef","uid","userSnapshot","exists","displayName","email","createdAt","Date","error","message","createAuthUserWithEmailAndPassword","password"],"sources":["/Users/tanmayrokde/Documents/capstone/src/utils/firebase/firebase.utils.js"],"sourcesContent":["import { initializeApp } from 'firebase/app';\nimport {\n  getAuth,\n  signInWithRedirect,\n  signInWithPopup,\n  GoogleAuthProvider,\n  createUserWithEmailAndPassword /*for email and pass*/\n} from 'firebase/auth';\n\nimport { getDoc, getFirestore, setDoc, doc } from 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAlzVDr28MYayjJSeDG_QBIoTJOJ8Mp0yo\",\n  authDomain: \"pro11-78bf1.firebaseapp.com\",\n  projectId: \"pro11-78bf1\",\n  storageBucket: \"pro11-78bf1.appspot.com\",\n  messagingSenderId: \"74071697846\",\n  appId: \"1:74071697846:web:52ea415136ee308b783917\",\n  measurementId: \"G-H5QQBD8XRC\"\n};\n\nconst firebaseApp = initializeApp(firebaseConfig);\n\nconst googleprovider = new GoogleAuthProvider();\n\ngoogleprovider.setCustomParameters({\n  prompt: 'select_account',\n});\n\nexport const createUserProfileDocument = async (userAuth, additionalData={}) => {\n  if (!userAuth) return;\n\n  console.log(userAuth);\n};\n\nexport const auth = getAuth();\n\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleprovider);\n;\n\n\nexport const db = getFirestore();\n\nexport const createUserDocumentFromAuth = async (userAuth,additionalInformation) => {\n  const userDocRef = doc(db, 'users', userAuth.uid);\n\n  const userSnapshot = await getDoc(userDocRef);\n\n  if (!userSnapshot.exists()) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation,\n      });\n    } catch (error) {\n      console.log('error creating the user', error.message);\n    }\n  }\n\n  return userDocRef;\n};\n\n\n// email and password\n\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password)\n    return await createUserWithEmailAndPassword(auth, email, password);\n}"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SACEC,OAAO,EACPC,kBAAkB,EAClBC,eAAe,EACfC,kBAAkB,EAClBC,8BAA8B,CAAC,8BAC1B,eAAe;AAEtB,SAASC,MAAM,EAAEC,YAAY,EAAEC,MAAM,EAAEC,GAAG,QAAQ,oBAAoB;AAEtE,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,6BAA6B;EACzCC,SAAS,EAAE,aAAa;EACxBC,aAAa,EAAE,yBAAyB;EACxCC,iBAAiB,EAAE,aAAa;EAChCC,KAAK,EAAE,0CAA0C;EACjDC,aAAa,EAAE;AACjB,CAAC;AAED,MAAMC,WAAW,GAAGlB,aAAa,CAACU,cAAc,CAAC;AAEjD,MAAMS,cAAc,GAAG,IAAIf,kBAAkB,CAAC,CAAC;AAE/Ce,cAAc,CAACC,mBAAmB,CAAC;EACjCC,MAAM,EAAE;AACV,CAAC,CAAC;AAEF,OAAO,MAAMC,yBAAyB,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,cAAc,GAAC,CAAC,CAAC,KAAK;EAC9E,IAAI,CAACD,QAAQ,EAAE;EAEfE,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;AACvB,CAAC;AAED,OAAO,MAAMI,IAAI,GAAG1B,OAAO,CAAC,CAAC;AAE7B,OAAO,MAAM2B,qBAAqB,GAAGA,CAAA,KAAMzB,eAAe,CAACwB,IAAI,EAAER,cAAc,CAAC;AAChF;AAGA,OAAO,MAAMU,EAAE,GAAGtB,YAAY,CAAC,CAAC;AAEhC,OAAO,MAAMuB,0BAA0B,GAAG,MAAAA,CAAOP,QAAQ,EAACQ,qBAAqB,KAAK;EAClF,MAAMC,UAAU,GAAGvB,GAAG,CAACoB,EAAE,EAAE,OAAO,EAAEN,QAAQ,CAACU,GAAG,CAAC;EAEjD,MAAMC,YAAY,GAAG,MAAM5B,MAAM,CAAC0B,UAAU,CAAC;EAE7C,IAAI,CAACE,YAAY,CAACC,MAAM,CAAC,CAAC,EAAE;IAC1B,MAAM;MAAEC,WAAW;MAAEC;IAAM,CAAC,GAAGd,QAAQ;IACvC,MAAMe,SAAS,GAAG,IAAIC,IAAI,CAAC,CAAC;IAE5B,IAAI;MACF,MAAM/B,MAAM,CAACwB,UAAU,EAAE;QACvBI,WAAW;QACXC,KAAK;QACLC,SAAS;QACT,GAAGP;MACL,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdf,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEc,KAAK,CAACC,OAAO,CAAC;IACvD;EACF;EAEA,OAAOT,UAAU;AACnB,CAAC;;AAGD;;AAEA,OAAO,MAAMU,kCAAkC,GAAG,MAAAA,CAAOL,KAAK,EAAEM,QAAQ,KAAK;EAC3E,IAAI,CAACN,KAAK,IAAI,CAACM,QAAQ,EACrB,OAAO,MAAMtC,8BAA8B,CAACsB,IAAI,EAAEU,KAAK,EAAEM,QAAQ,CAAC;AACtE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}